/* tslint:disable */
/* eslint-disable */
/**
 * Once Upon
 * API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ENSDto,
} from '../models/index';
import {
    ENSDtoFromJSON,
    ENSDtoToJSON,
} from '../models/index';

export interface EnsControllerGetEnsRequest {
    ensOrAddr: string;
}

export interface EnsControllerGetEnsFromTokenIdRequest {
    tokenId: string;
}

export interface EnsControllerGetReverseEnsRequest {
    address: string;
}

/**
 * 
 */
export class EnsApi extends runtime.BaseAPI {

    /**
     * Fetches Ethereum Name Service (ENS) details for a given ENS name or address.
     * Retrieve User ENS
     */
    async ensControllerGetEnsRaw(requestParameters: EnsControllerGetEnsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ENSDto>>> {
        if (requestParameters['ensOrAddr'] == null) {
            throw new runtime.RequiredError(
                'ensOrAddr',
                'Required parameter "ensOrAddr" was null or undefined when calling ensControllerGetEns().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/ens/{ensOrAddr}`.replace(`{${"ensOrAddr"}}`, encodeURIComponent(String(requestParameters['ensOrAddr']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(ENSDtoFromJSON));
    }

    /**
     * Fetches Ethereum Name Service (ENS) details for a given ENS name or address.
     * Retrieve User ENS
     */
    async ensControllerGetEns(requestParameters: EnsControllerGetEnsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ENSDto>> {
        const response = await this.ensControllerGetEnsRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Fetches Ethereum Name Service (ENS) details based on a given token ID.
     * Retrieve ENS from Token ID
     */
    async ensControllerGetEnsFromTokenIdRaw(requestParameters: EnsControllerGetEnsFromTokenIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ENSDto>> {
        if (requestParameters['tokenId'] == null) {
            throw new runtime.RequiredError(
                'tokenId',
                'Required parameter "tokenId" was null or undefined when calling ensControllerGetEnsFromTokenId().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/ens/token/{tokenId}`.replace(`{${"tokenId"}}`, encodeURIComponent(String(requestParameters['tokenId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ENSDtoFromJSON(jsonValue));
    }

    /**
     * Fetches Ethereum Name Service (ENS) details based on a given token ID.
     * Retrieve ENS from Token ID
     */
    async ensControllerGetEnsFromTokenId(requestParameters: EnsControllerGetEnsFromTokenIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ENSDto> {
        const response = await this.ensControllerGetEnsFromTokenIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     * Fetches the reverse Ethereum Name Service (ENS) name for a given Ethereum address.
     * Retrieve User\'s Reverse ENS
     */
    async ensControllerGetReverseEnsRaw(requestParameters: EnsControllerGetReverseEnsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ENSDto>> {
        if (requestParameters['address'] == null) {
            throw new runtime.RequiredError(
                'address',
                'Required parameter "address" was null or undefined when calling ensControllerGetReverseEns().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v1/ens/{address}/reverse`.replace(`{${"address"}}`, encodeURIComponent(String(requestParameters['address']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => ENSDtoFromJSON(jsonValue));
    }

    /**
     * Fetches the reverse Ethereum Name Service (ENS) name for a given Ethereum address.
     * Retrieve User\'s Reverse ENS
     */
    async ensControllerGetReverseEns(requestParameters: EnsControllerGetReverseEnsRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ENSDto> {
        const response = await this.ensControllerGetReverseEnsRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
