/* tslint:disable */
/* eslint-disable */
/**
 * Once Upon
 * API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ParamTypeDto } from './ParamTypeDto';
import {
    ParamTypeDtoFromJSON,
    ParamTypeDtoFromJSONTyped,
    ParamTypeDtoToJSON,
} from './ParamTypeDto';

/**
 * 
 * @export
 * @interface AbiDto
 */
export interface AbiDto {
    /**
     * Type of the fragment.
     * @type {string}
     * @memberof AbiDto
     */
    type: string;
    /**
     * Name of the fragment.
     * @type {string}
     * @memberof AbiDto
     */
    name: string;
    /**
     * List of input parameters.
     * @type {Array<ParamTypeDto>}
     * @memberof AbiDto
     */
    inputs: Array<ParamTypeDto>;
}

/**
 * Check if a given object implements the AbiDto interface.
 */
export function instanceOfAbiDto(value: object): boolean {
    if (!('type' in value)) return false;
    if (!('name' in value)) return false;
    if (!('inputs' in value)) return false;
    return true;
}

export function AbiDtoFromJSON(json: any): AbiDto {
    return AbiDtoFromJSONTyped(json, false);
}

export function AbiDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AbiDto {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'name': json['name'],
        'inputs': ((json['inputs'] as Array<any>).map(ParamTypeDtoFromJSON)),
    };
}

export function AbiDtoToJSON(value?: AbiDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'type': value['type'],
        'name': value['name'],
        'inputs': ((value['inputs'] as Array<any>).map(ParamTypeDtoToJSON)),
    };
}

