/* tslint:disable */
/* eslint-disable */
/**
 * Once Upon
 * API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface FarcasterProfileDto
 */
export interface FarcasterProfileDto {
    /**
     * Unique identifier for the user
     * @type {number}
     * @memberof FarcasterProfileDto
     */
    fid: number;
    /**
     * Ethereum custody address
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    custodyAddress: string;
    /**
     * Username of the user
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    username: string;
    /**
     * Display name of the user
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    displayName: string;
    /**
     * Profile picture URL
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    pfp: string;
    /**
     * Bio of the user
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    profile: string;
    /**
     * Number of followers
     * @type {number}
     * @memberof FarcasterProfileDto
     */
    followerCount: number;
    /**
     * Number of following
     * @type {number}
     * @memberof FarcasterProfileDto
     */
    followingCount: number;
    /**
     * List of verifications
     * @type {Array<string>}
     * @memberof FarcasterProfileDto
     */
    verifications?: Array<string>;
    /**
     * Active status of the user
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    activeStatus: string;
    /**
     * Timestamp of the user profile information
     * @type {string}
     * @memberof FarcasterProfileDto
     */
    timestamp: string;
}

/**
 * Check if a given object implements the FarcasterProfileDto interface.
 */
export function instanceOfFarcasterProfileDto(value: object): boolean {
    if (!('fid' in value)) return false;
    if (!('custodyAddress' in value)) return false;
    if (!('username' in value)) return false;
    if (!('displayName' in value)) return false;
    if (!('pfp' in value)) return false;
    if (!('profile' in value)) return false;
    if (!('followerCount' in value)) return false;
    if (!('followingCount' in value)) return false;
    if (!('activeStatus' in value)) return false;
    if (!('timestamp' in value)) return false;
    return true;
}

export function FarcasterProfileDtoFromJSON(json: any): FarcasterProfileDto {
    return FarcasterProfileDtoFromJSONTyped(json, false);
}

export function FarcasterProfileDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): FarcasterProfileDto {
    if (json == null) {
        return json;
    }
    return {
        
        'fid': json['fid'],
        'custodyAddress': json['custodyAddress'],
        'username': json['username'],
        'displayName': json['displayName'],
        'pfp': json['pfp'],
        'profile': json['profile'],
        'followerCount': json['followerCount'],
        'followingCount': json['followingCount'],
        'verifications': json['verifications'] == null ? undefined : json['verifications'],
        'activeStatus': json['activeStatus'],
        'timestamp': json['timestamp'],
    };
}

export function FarcasterProfileDtoToJSON(value?: FarcasterProfileDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'fid': value['fid'],
        'custodyAddress': value['custodyAddress'],
        'username': value['username'],
        'displayName': value['displayName'],
        'pfp': value['pfp'],
        'profile': value['profile'],
        'followerCount': value['followerCount'],
        'followingCount': value['followingCount'],
        'verifications': value['verifications'],
        'activeStatus': value['activeStatus'],
        'timestamp': value['timestamp'],
    };
}

