/* tslint:disable */
/* eslint-disable */
/**
 * Once Upon
 * API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface HeatMapDto
 */
export interface HeatMapDto {
    /**
     * Address associated with the heatmap.
     * @type {string}
     * @memberof HeatMapDto
     */
    address: string;
    /**
     * Chain ID associated with the heatmap.
     * @type {number}
     * @memberof HeatMapDto
     */
    chainId: number;
    /**
     * Timestamp or number indicating the last run.
     * @type {number}
     * @memberof HeatMapDto
     */
    lastRun: number;
    /**
     * Results associated with the heatmap, with key-value pairs representing some identifier and a numeric metric or value.
     * @type {{ [key: string]: number; }}
     * @memberof HeatMapDto
     */
    results: { [key: string]: number; };
    /**
     * Count metric associated with the heatmap.
     * @type {number}
     * @memberof HeatMapDto
     */
    count: number;
}

/**
 * Check if a given object implements the HeatMapDto interface.
 */
export function instanceOfHeatMapDto(value: object): boolean {
    if (!('address' in value)) return false;
    if (!('chainId' in value)) return false;
    if (!('lastRun' in value)) return false;
    if (!('results' in value)) return false;
    if (!('count' in value)) return false;
    return true;
}

export function HeatMapDtoFromJSON(json: any): HeatMapDto {
    return HeatMapDtoFromJSONTyped(json, false);
}

export function HeatMapDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): HeatMapDto {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'chainId': json['chainId'],
        'lastRun': json['lastRun'],
        'results': json['results'],
        'count': json['count'],
    };
}

export function HeatMapDtoToJSON(value?: HeatMapDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'address': value['address'],
        'chainId': value['chainId'],
        'lastRun': value['lastRun'],
        'results': value['results'],
        'count': value['count'],
    };
}

