/* tslint:disable */
/* eslint-disable */
/**
 * Once Upon
 * API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NFTCollectionDto
 */
export interface NFTCollectionDto {
    /**
     * The name of the NFT collection
     * @type {string}
     * @memberof NFTCollectionDto
     */
    name: string;
    /**
     * Description about the NFT collection
     * @type {string}
     * @memberof NFTCollectionDto
     */
    description: string;
    /**
     * URL of the image representing the NFT collection
     * @type {string}
     * @memberof NFTCollectionDto
     */
    imageUrl: string;
    /**
     * URL of the banner image for the NFT collection
     * @type {string}
     * @memberof NFTCollectionDto
     */
    bannerImageUrl: string;
    /**
     * Category of the NFT collection
     * @type {string}
     * @memberof NFTCollectionDto
     */
    category: string;
    /**
     * Indicates if the collection is not safe for work
     * @type {boolean}
     * @memberof NFTCollectionDto
     */
    isNsfw: boolean;
    /**
     * External URL related to the NFT collection
     * @type {string}
     * @memberof NFTCollectionDto
     */
    externalUrl: string;
}

/**
 * Check if a given object implements the NFTCollectionDto interface.
 */
export function instanceOfNFTCollectionDto(value: object): boolean {
    if (!('name' in value)) return false;
    if (!('description' in value)) return false;
    if (!('imageUrl' in value)) return false;
    if (!('bannerImageUrl' in value)) return false;
    if (!('category' in value)) return false;
    if (!('isNsfw' in value)) return false;
    if (!('externalUrl' in value)) return false;
    return true;
}

export function NFTCollectionDtoFromJSON(json: any): NFTCollectionDto {
    return NFTCollectionDtoFromJSONTyped(json, false);
}

export function NFTCollectionDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): NFTCollectionDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'description': json['description'],
        'imageUrl': json['image_url'],
        'bannerImageUrl': json['banner_image_url'],
        'category': json['category'],
        'isNsfw': json['is_nsfw'],
        'externalUrl': json['external_url'],
    };
}

export function NFTCollectionDtoToJSON(value?: NFTCollectionDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'image_url': value['imageUrl'],
        'banner_image_url': value['bannerImageUrl'],
        'category': value['category'],
        'is_nsfw': value['isNsfw'],
        'external_url': value['externalUrl'],
    };
}

