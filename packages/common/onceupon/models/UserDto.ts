/* tslint:disable */
/* eslint-disable */
/**
 * Once Upon
 * API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UserDto
 */
export interface UserDto {
    /**
     * The privy user ID.
     * @type {string}
     * @memberof UserDto
     */
    privyUserId: string;
    /**
     * The address of the user.
     * @type {string}
     * @memberof UserDto
     */
    address: string;
    /**
     * Expiration timestamp.
     * @type {number}
     * @memberof UserDto
     */
    expires: number;
    /**
     * The registration timestamp of the user.
     * @type {number}
     * @memberof UserDto
     */
    registeredTimestamp?: number;
    /**
     * The email address of the user.
     * @type {string}
     * @memberof UserDto
     */
    email?: string;
    /**
     * The role of the user.
     * @type {string}
     * @memberof UserDto
     */
    role?: UserDtoRoleEnum;
}


/**
 * @export
 */
export const UserDtoRoleEnum = {
    Admin: 'admin'
} as const;
export type UserDtoRoleEnum = typeof UserDtoRoleEnum[keyof typeof UserDtoRoleEnum];


/**
 * Check if a given object implements the UserDto interface.
 */
export function instanceOfUserDto(value: object): boolean {
    if (!('privyUserId' in value)) return false;
    if (!('address' in value)) return false;
    if (!('expires' in value)) return false;
    return true;
}

export function UserDtoFromJSON(json: any): UserDto {
    return UserDtoFromJSONTyped(json, false);
}

export function UserDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): UserDto {
    if (json == null) {
        return json;
    }
    return {
        
        'privyUserId': json['privyUserId'],
        'address': json['address'],
        'expires': json['expires'],
        'registeredTimestamp': json['registeredTimestamp'] == null ? undefined : json['registeredTimestamp'],
        'email': json['email'] == null ? undefined : json['email'],
        'role': json['role'] == null ? undefined : json['role'],
    };
}

export function UserDtoToJSON(value?: UserDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'privyUserId': value['privyUserId'],
        'address': value['address'],
        'expires': value['expires'],
        'registeredTimestamp': value['registeredTimestamp'],
        'email': value['email'],
        'role': value['role'],
    };
}

